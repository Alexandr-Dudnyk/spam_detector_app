import streamlit as st
import joblib

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ
@st.cache_resource
def load_model():
    return joblib.load("spam_detector_ukr.pkl")

model = load_model()

# –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.set_page_config(page_title="UkrSpamDetector", page_icon="üì©")
st.title("üì© –í–∏—è–≤–ª–µ–Ω–Ω—è –°–ü–ê–ú—É (—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞)")
st.markdown("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ —î –≤–æ–Ω–æ —Å–ø–∞–º–æ–º.")

# –í–≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_input = st.text_area("‚úçÔ∏è –í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", height=150)

if user_input:
    prediction = model.predict([user_input])[0]
    probas = model.predict_proba([user_input])[0]
    spam_prob = round(probas[model.classes_.tolist().index("spam")], 2)

    st.subheader("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    if prediction == "spam":
        st.error(f"‚ùå –¶–µ –°–ü–ê–ú (–π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å: {spam_prob})")
    else:
        st.success(f"‚úÖ –¶–µ –Ω–µ —Å–ø–∞–º (–π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —Å–ø–∞–º—É: {spam_prob})")

    with st.expander("üìä –î–µ—Ç–∞–ª—ñ"):
        st.json({
            "–ö–ª–∞—Å–∏": list(model.classes_),
            "–ô–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ": {cls: round(prob, 3) for cls, prob in zip(model.classes_, probas)}
        })
